local isMathQuestion = falsefunction createMathProblem ( p )	if p and not exports["VDBGAdministration"]:isPlayerStaff ( p ) then return false end	if not isMathQuestion then		local n1 = math.random ( 50, 90 )		local n2 = math.random ( 20, 45 )		local n3 = math.random ( 1000, 9000 )		local reward = math.random ( 300, 600 )		local question = n1.." - "..n2.." + "..n3		outputDebugString ( "Questão de matemática: "..question.."foi gerada com uma resposta de "..n1 - n2 + n3 )		outputChatBox (" ",getRootElement(),255,255,255,true)		outputChatBox ( "#d9534f[VDBG.ORG]#ffffff Questão: #1c8ae8"..question.."#ffffff - Prêmio #acd373R R$"..reward..",00 #d9534f (/mtm [resposta])", getRootElement ( ), 0, 0, 0, true ) 		outputChatBox (" ",getRootElement(),255,255,255,true)				mathTable = {			reward = reward,			question = n1.." - "..n2.." + "..n3,			answer = n1 - n2 + n3		}				isMathQuestion = true		return true	else		isMathQuestion = false		mathTable = nil		createMathProblem ( )	endendsetTimer ( createMathProblem, 600000, 0 )addCommandHandler ( "math", createMathProblem )addCommandHandler ( "mtm", function ( p, cmd, answer )	if ( isMathQuestion ) then		if ( tonumber ( answer ) == tonumber ( mathTable.answer ) ) then			outputChatBox ( "#d9534f[VDBG.ORG] #1c8ae8"..getPlayerName ( p ).."#ffffff foi o primeiro a responder #1c8ae8"..mathTable.answer.."#ffffff e ganhou #acd373R$ "..mathTable.reward..",00", root, 0, 0, 0, true )			givePlayerMoney ( p, mathTable.reward )			isMathQuestion = false			mathTable = nil			return true		else			outputChatBox ( "#d9534f[VDBG.ORG] #ffffffDesculpe, #1c8ae8"..getPlayerName ( p ).." #ffffff não é a resposta correta.", p, 255, 0, 0, true )			return false		end	else		outputChatBox ( "#d9534f[VDBG.ORG] #ffffffNão há questões disponíveis no momento. Tente novamente mais tarde.", p, 255, 0, 0, true )		return false	endend )function getRunningMathEquation ( )	if ( mathTable ) then		return mathTable.question	end	return falseend